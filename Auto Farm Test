-- ✅ Kích hoạt chế độ tự động dùng kỹ năng
_G.auto = true

-- 📦 Dịch vụ Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- 🧍 Người chơi
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

-- ⚙️ Biến trạng thái
local _isInGame = false
local currentFruit = nil
local currentHumanoid = nil
local characterReady = false

-- 💥 Danh sách kỹ năng theo trái ác quỷ
local skills = {
    DoughV2 = {"GrilledLance", "ElasticLasso", "Oblivion", "PowerDough", "BlazingStorm", "ScorchingBuzzcut"},
    Ope = {"Room", "Takt", "Wreckage", "HurricaneShock", "GammaKnife", "Mes", "Shambles"},
    LeopardV2 = {"FingerPistolBarrage", "SonicKick", "InfinityDrive", "UnrelentingAssault", "Transform", "HeavensDemise"},
    Lightning = {"VoltageUp", "LightningPalm", "CrashingThunder", "ProjectedBurst", "CrushingJudgment", "Raigo"},
    Nika = {"RocGun", "NeoRedHawk", "RocGatling", "RedRoc", "DrumsOfLiberation", "Gear5", "SpinningTop", "DawnRocket", "MolePistolCombo", "RisingBolt", "GigantStamp", "BajrangGun"},
    DragonV2 = {"InfernoBreath", "ThunderBagua", "DragonTwister", "BeastsBellow", "Transform", "BoloFrenzy", "FlamingTorch", "Demolition", "Transformation"},
    Soul = {"EnthralGrasp", "ScorchingSickle", "ZeusMeadow", "CrimsonPillar", "Transform", "MaserCannon"},
    DarkXQuake = {"AntiQuake", "BlackHolePath", "BlackTurret", "NeoKurouzuCombo", "AntiBody", "QuadraSeaQuake"},
    Okuchi = {"PrimalRage", "ArcticBreath", "DevastatingDrop", "HallowedCuts", "GlacialCoat", "DivineSerpent"},
}

-- 🔁 Biến lưu cooldown
local lastUsed = {}

-- 🧬 Cập nhật trái hiện tại
local function updateCurrentFruit()
    local mainData = player:FindFirstChild("MAIN_DATA")
    if not mainData then return end
    local currentSlot = mainData:FindFirstChild("Slot")
    if not currentSlot then return end
    local slotValue = mainData.Slots:FindFirstChild(tostring(currentSlot.Value))
    currentFruit = slotValue and slotValue.Value or nil
end

-- 👀 Theo dõi thay đổi slot trái
local function watchSlotChanges()
    local mainData = player:WaitForChild("MAIN_DATA", 10)
    if not mainData then return end
    local slot = mainData:WaitForChild("Slot", 5)
    if not slot then return end
    slot:GetPropertyChangedSignal("Value"):Connect(updateCurrentFruit)
    updateCurrentFruit()
end

-- ⏲️ Kiểm tra cooldown từ GUI (nếu có)
local function isSkillOnCooldown(skill)
    local guiSkill = gui:FindFirstChild("SkillCooldownGui", true) -- Tên GUI cần thay đổi tùy game
    if guiSkill then
        local skillFrame = guiSkill:FindFirstChild(skill, true)
        if skillFrame and skillFrame:FindFirstChild("Cooldown") then
            return tonumber(skillFrame.Cooldown.Text) > 0
        end
    end
    return false -- Mặc định không cooldown nếu không tìm thấy
end

-- 💥 Gọi kỹ năng trái
local function castSkill(fruit, skill)
    if not fruit or not skill then return end

    local now = tick()
    if lastUsed[skill] and now - lastUsed[skill] < 1 then return end

    if isSkillOnCooldown(skill) then return end

    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local target = hrp.Position + hrp.CFrame.LookVector * 50
    local dir = (target - hrp.Position).Unit * 45
    local ray = {
        Normal = Vector3.yAxis,
        Direction = dir,
        Origin = hrp.Position,
        Instance = workspace.Map:FindFirstChildWhichIsA("BasePart") or workspace.Terrain,
        Distance = (target - hrp.Position).Magnitude,
        Material = Enum.Material.Grass,
        Position = target
    }

    local success, err = pcall(function()
        ReplicatedStorage.Replicator:InvokeServer(fruit, skill, {
            Ground = {Position = target},
            MouseRay = ray
        })
        ReplicatedStorage.ReplicatorNoYield:FireServer("ClientData", "UpdateData", {
            RootCF = hrp.CFrame,
            MouseRay = ray
        })
    end)

    if success then
        lastUsed[skill] = now
    end
end

-- 🔁 Spam kỹ năng theo cooldown
local skillLoopRunning = false
local function startSkillLoop()
    if skillLoopRunning then return end
    skillLoopRunning = true
    task.spawn(function()
        while true do
            if _G.auto and _isInGame and characterReady and currentFruit and skills[currentFruit] then
                for _, skill in ipairs(skills[currentFruit]) do
                    castSkill(currentFruit, skill)
                    task.wait(0.05)
                end
            else
                task.wait(0.5)
            end
        end
    end)
end

-- 👂 Theo dõi nhân vật mới
if player.Character then
    currentHumanoid = player.Character:FindFirstChild("Humanoid")
    characterReady = true
end

player.CharacterAdded:Connect(function(char)
    _isInGame = true
    characterReady = false
    task.wait(1)
    currentHumanoid = char:WaitForChild("Humanoid", 5)
    characterReady = true
    startSkillLoop()
end)

-- ▶️ Auto Play + Teleport
task.spawn(function()
    while true do
        while not (player.Character and player.Character:FindFirstChild("HumanoidRootPart")) do
            local playButton = gui:FindFirstChild("Play", true)
            if playButton then
                GuiService.SelectedObject = playButton
                task.wait(5)
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                task.wait(0.05)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                task.wait(1)
                local char = player.Character or player.CharacterAdded:Wait()
                local hrp = char:WaitForChild("HumanoidRootPart", 5)
                if hrp then hrp.CFrame = CFrame.new(-1420, 798.93, -85) end
            end
            task.wait(5)
        end
        repeat task.wait(0.5) until not player.Character
        _isInGame = false
        characterReady = false
    end
end)

watchSlotChanges()
startSkillLoop()
